pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'malekdocker98/spring:latest' 
     
    }
    stages {
       
        stage('Build Application') {
            steps {
                // Use Maven to build the Spring Boot application
                sh 'mvn clean package -DskipTests' 
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image from the Dockerfile in the repository
                    docker.build(DOCKER_IMAGE)
                }
            }
        }

       stage('push to dockerhub') {
            steps {
                script {
             withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    // Push the Docker image to Docker Hub
             sh """
                        echo \$DOCKERHUB_PASSWORD | docker login -u \$DOCKERHUB_USERNAME --password-stdin
                    """
                    
}

sh "docker push ${DOCKER_IMAGE}"
sh "docker rm -f $(docker ps -aq --filter "ancestor=malekdocker98/spring") && docker rmi malekdocker98/spring"
             

}
            }
        }
      
    }
   
}
