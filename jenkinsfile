pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'nadamejri/foyer:latest' // Your Docker Hub image name
        LOCAL_IMAGE = 'foyer' // Your existing local image name
    }

    stages {
        stage('Checkout Git') {
            steps {
                // Récupération du code depuis la branche spécifique
                git branch: 'Mejri-Nada', url: 'https://github.com/nerminetarhouni1/tpGit.git'
            }
        }

        stage('Maven Clean') {
            steps {
                // Nettoyage avec Maven
                sh 'mvn clean'
            }
        }

        stage('Maven Compile') {
            steps {
                //compilation avec Maven
                sh 'mvn compile'
            }
        }

        stage('Run Unit Tests') {
            steps {
                // Run unit tests with Maven
                sh 'mvn test'
            }
        }

        stage('Run Integration Tests') {
            steps {
                // Run integration tests with Maven
                sh 'mvn verify'
            }
        }

        stage('Test SONARQUBE'){
            steps{
                //sonarqube analysis
                sh '''
                    mvn sonar:sonar \
                    -Dsonar.projectKey=Foyer \
                    -Dsonar.host.url=http://192.168.50.4:9000 \
                    -Dsonar.token=squ_75936c3558fe8e2de5ecdb385258d5672bf24204
                '''
            }
        }

        stage('Remove Previous Docker Image') {
            steps {
                script {
                    // Remove the previous Docker image if it exists
                    sh "docker rmi ${DOCKER_IMAGE} || echo 'Image does not exist, skipping removal.'"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image for the foyer service
                    sh 'docker-compose build ${LOCAL_IMAGE}'
                }
            }
        }


        stage('Tag Docker Image') {
            steps {
                script {
                    // Tag the local Docker image
                    sh "docker tag ${LOCAL_IMAGE} ${DOCKER_IMAGE}"
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                        echo "Logging in to Docker Hub as: \$DOCKERHUB_USERNAME" // Debug statement (omit if sensitive)
                        // Login to Docker Hub
                        sh "echo \$DOCKERHUB_PASSWORD | docker login -u \$DOCKERHUB_USERNAME --password-stdin"

                        // Push the Docker image to Docker Hub
                        sh "docker push ${LOCAL_IMAGE}"
                    }
                }
            }
        }


        stage('Run Docker Containers with Docker Compose') {
            steps {
                script {
                    // Bring up the Docker containers using docker-compose
                    sh 'docker-compose up -d'
                }
            }
        }
    }
}